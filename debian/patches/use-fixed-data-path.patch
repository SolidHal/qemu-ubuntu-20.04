Subject: use fixed data path and use it as path not directory
From: Michael Tokarev <mjt@tls.msk.ru>
Debian-specific: yes

Instead of using data_dir determined at runtime from executable
filename, use fixed data_path and treat it as path (series of
directories determined by colons (:), the same as $PATH environment
variable).

This way, we can give a set of directories -- like
/usr/share/seabios:/usr/share/gpxe etc -- as CONFIG_QEMU_DATAPATH
#define at compile time, instead of using (dangling) symlinks.  We
also may use alternative implementations of various components,
and stop hard-depending on other packages.

Note we may also use $QEMU_DATA_PATH (or just $QEMU_PATH) variable
at runtime, but this probably needs to be discussed with upstream.

While at it, also increase max number of data path elements
from 16 to 32.

diff --git a/os-posix.c b/os-posix.c
index d39261d..ab6b9fd 100644
--- a/os-posix.c
+++ b/os-posix.c
@@ -79,6 +79,7 @@ void os_setup_signal_handling(void)
     sigaction(SIGTERM, &act, NULL);
 }
 
+#if 0 /* we use a fixed configured data path */
 /* Find a likely location for support files using the location of the binary.
    For installed binaries this will be "$bindir/../share/qemu".  When
    running from the build tree this will be "$bindir/../pc-bios".  */
@@ -141,6 +142,7 @@ char *os_find_datadir(const char *argv0)
 }
 #undef SHARE_SUFFIX
 #undef BUILD_SUFFIX
+#endif
 
 void os_set_proc_name(const char *s)
 {
diff --git a/vl.c b/vl.c
index 6e6225f..4c00fbd 100644
--- a/vl.c
+++ b/vl.c
@@ -179,7 +179,10 @@ int main(int argc, char **argv)
 #define MAX_VIRTIO_CONSOLES 1
 #define MAX_SCLP_CONSOLES 1
 
-static const char *data_dir[16];
+#ifdef CONFIG_QEMU_DATAPATH
+static char data_path[] = CONFIG_QEMU_DATAPATH;
+#endif
+static const char *data_dir[32];
 static int data_dir_idx;
 const char *bios_name = NULL;
 enum vga_retrace_method vga_retrace_method = VGA_RETRACE_DUMB;
@@ -3948,18 +3962,19 @@ int main(int argc, char **argv, char **envp)
         exit(1);
     }
 
-    /* If no data_dir is specified then try to find it relative to the
-       executable path.  */
-    if (data_dir_idx < ARRAY_SIZE(data_dir)) {
-        data_dir[data_dir_idx] = os_find_datadir(argv[0]);
-        if (data_dir[data_dir_idx] != NULL) {
-            data_dir_idx++;
-        }
+    /* Fill in the rest of config-specific dirs for bios paths */
+#ifdef CONFIG_QEMU_DATAPATH
+    for (optarg = strtok(data_path, ":");
+         optarg && data_dir_idx < ARRAY_SIZE(data_dir);
+         optarg = strtok(NULL, ":"))
+    {
+        data_dir[data_dir_idx++] = optarg;
     }
-    /* If all else fails use the install path specified when building. */
+#else
     if (data_dir_idx < ARRAY_SIZE(data_dir)) {
         data_dir[data_dir_idx++] = CONFIG_QEMU_DATADIR;
     }
+#endif
 
     /*
      * Default to max_cpus = smp_cpus, in case the user doesn't
