Index: qemu-0.10.0/linux-user/syscall.c
===================================================================
--- qemu-0.10.0.orig/linux-user/syscall.c	2009-03-07 13:47:26.000000000 +0100
+++ qemu-0.10.0/linux-user/syscall.c	2009-03-07 13:47:26.000000000 +0100
@@ -56,6 +56,7 @@
 //#include <sys/user.h>
 #include <netinet/ip.h>
 #include <netinet/tcp.h>
+#include <sys/sysctl.h>
 #include <qemu-common.h>
 #ifdef HAVE_GPROF
 #include <sys/gmon.h>
@@ -5296,9 +5297,34 @@
         break;
 #endif
     case TARGET_NR__sysctl:
-        /* We don't implement this, but ENOTDIR is always a safe
-           return value. */
-        ret = -TARGET_ENOTDIR;
+        {
+            struct __sysctl_args *args = (struct __sysctl_args *) arg1;
+            int *name_target, *name, nlen, *oldlenp, oldlen, newlen, i;
+            void *oldval, *newval;
+
+            name_target = (int *) tswapl((long) args->name);
+            nlen = tswapl(args->nlen);
+            oldval = (void *) tswapl((long) args->oldval);
+            oldlenp = (int *) tswapl((long) args->oldlenp);
+            oldlen = tswapl(*oldlenp);
+            newval = (void *) tswapl((long) args->newval);
+            newlen = tswapl(args->newlen);
+
+            name = alloca(nlen * sizeof (int));
+            for (i = 0; i < nlen; i++)
+                name[i] = tswapl(name_target[i]);
+
+            if (nlen == 2 && name[0] == CTL_KERN && name[1] == KERN_VERSION) {
+                ret = get_errno(
+                        sysctl(name, nlen, oldval, &oldlen, newval, newlen));
+                if (!is_error(ret)) {
+                    *oldlenp = tswapl(oldlen);
+                }
+            } else {
+                gemu_log("qemu: Unsupported sysctl name\n");
+                ret = -ENOSYS;
+            }
+        }
         break;
     case TARGET_NR_sched_setparam:
         {
