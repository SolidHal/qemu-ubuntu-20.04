#!/usr/bin/make -f
#
# $Id: rules 391 2009-03-07 05:21:19Z aurel32 $
#

# support parallel build using DEB_BUULD_OPTIONS=parallel=N
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
  MAKEFLAGS += -j$(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
endif

# Packaging version
DEB_VERSION := $(shell dpkg-parsechangelog | egrep '^Version:' | cut -f 2 -d ' ')

# Compiler flags
CFLAGS = $(shell dpkg-buildflags --get CFLAGS) $(shell dpkg-buildflags --get CPPFLAGS)
LDFLAGS = $(shell dpkg-buildflags --get LDFLAGS) -Wl,--as-needed

# Architecture/system specific configuration
DEB_HOST_ARCH = $(shell dpkg-architecture -qDEB_HOST_ARCH)
DEB_HOST_ARCH_OS = $(shell dpkg-architecture -qDEB_HOST_ARCH_OS)

common_configure_opts = \
	--with-pkgversion="Debian $(DEB_VERSION)" \
	--extra-cflags="$(CFLAGS)" \
	--extra-ldflags="$(LDFLAGS)" \
	--prefix=/usr \
	--sysconfdir=/etc \
	--disable-blobs \
	--disable-strip \
	--with-system-pixman \

ifeq ($(DEB_HOST_ARCH_OS),linux)
       conf_audio_drv = --audio-drv-list=alsa,oss,sdl,pa
else ifeq ($(DEB_HOST_ARCH_OS),kfreebsd)
       conf_audio_drv = --audio-drv-list=oss,sdl,pa
else
       conf_audio_drv = 
endif

# list of system (softmmu) targets, from ./configure
system_targets = \
 i386 x86_64 alpha arm cris lm32 m68k microblaze microblazeel \
 mips mipsel mips64 mips64el or32 ppc ppcemb ppc64 sh4 sh4eb \
 sparc sparc64 s390x xtensa xtensaeb unicore32

ifeq ($(DEB_HOST_ARCH_OS),linux)

# list of linux-user targets, from ./configure
user_targets = \
 i386 x86_64 alpha arm armeb cris m68k microblaze microblazeel \
 mips mipsel ppc ppc64 ppc64abi32 sh4 sh4eb sparc sparc64 sparc32plus \
 unicore32 s390x

# binfmt linux-user support

all_binfmt_targets = \
 $(patsubst debian/binfmts/qemu-%,%,$(wildcard debian/binfmts/qemu-*))

# find which targets needs to be filtered out, which is arch-dependent.
# Drop support for emulating amd64 on i386, http://bugs.debian.org/604712
filter_binfmts = $(shell \
 case $(DEB_HOST_ARCH) in \
   (amd64 | i386) echo i386 x86_64 ;;\
   (arm | armel | armhf) echo arm ;;\
   (mips | mipsel) echo $(DEB_HOST_ARCH) ;;\
   (powerpc) echo ppc ;;\
   (ppc64) echo ppc ppc64 ppc64abi32 ;;\
   (s390x) echo s390x ;;\
   (sparc | sparc64) echo sparc sparc32plus sparc64 ;;\
 esac)

binfmt_targets = $(filter-out $(filter_binfmts), $(all_binfmt_targets))

user_configure_opts = \
	--target-list="$(addsuffix -linux-user,${user_targets})" \
	--interp-prefix=/etc/qemu-binfmt/%M \
	--disable-system

endif	# binfmt

configure-stamp: configure
	dh_testdir

	# system build
	mkdir -p system-build && cd system-build && \
		../configure ${common_configure_opts} \
			--disable-linux-user \
			--disable-bsd-user \
			${conf_audio_drv}

ifeq ($(DEB_HOST_ARCH_OS),kfreebsd)
# Hack alert.  XXX need to verify if it is still the case.
# On recent kFreebsd, old USB host API has been removed,
# but qemu did not learn to use new USB API.
# Just do not build USB host support.
	sed -i 's/^HOST_USB=bsd/HOST_USB=stub/' \
		$(CURDIR)/system-build/config-host.mak
endif

ifeq ($(DEB_HOST_ARCH_OS),linux)
	# user build
	mkdir -p user-build && cd user-build && \
		../configure ${common_configure_opts} ${user_configure_opts}
	# static user build
	mkdir -p user-static-build && cd user-static-build && \
		../configure ${common_configure_opts} ${user_configure_opts} \
			--static
endif
	touch $@

build: build-arch build-indep
build-arch: build-stamp
build-indep: build-stamp
build-stamp: configure-stamp
	dh_testdir

	# system build
	$(MAKE) -C $(CURDIR)/system-build
	dtc -o system-build/pc-bios/bamboo.dtb pc-bios/bamboo.dts

ifeq ($(DEB_HOST_ARCH_OS),linux)
	# user and user-static build
	# we use this invocation to build just the binaries
	$(MAKE) -C $(CURDIR)/user-build $(foreach t,${user_targets},subdir-${t}-linux-user)
	$(MAKE) -C $(CURDIR)/user-static-build $(foreach t,${user_targets},subdir-${t}-linux-user)
endif
	touch $@

clean:
	dh_testdir
	rm -rf $(CURDIR)/*-build/
	rm -f $(CURDIR)/*-stamp
	find $(CURDIR)/scripts/ -name '*.pyc' -delete || :
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_prep
	dh_installdirs -a

	# system build
	$(MAKE) -C $(CURDIR)/system-build DESTDIR=$(CURDIR)/debian/tmp install

	# qemu-system
	mkdir -p debian/qemu-system/usr/bin debian/qemu-system/usr/share/man/man1
	mv $(addprefix debian/tmp/usr/bin/qemu-system-,${system_targets}) \
	    debian/qemu-system/usr/bin/
	for t in ${system_targets}; do \
		ln -s qemu.1 debian/qemu-system/usr/share/man/man1/qemu-system-$$t.1 ;\
	done

ifeq ($(DEB_HOST_ARCH_OS),linux)
	# qemu-user and qemu-user-static
	for x in "" -static; do \
	    mkdir -p debian/qemu-user$$x/usr/bin \
		debian/qemu-user$$x/usr/share/man/man1 ;\
	    for t in ${user_targets} ; do \
		cp -p user$$x-build/$$t-linux-user/qemu-$$t \
		    debian/qemu-user$$x/usr/bin/qemu-$$t$$x ;\
		ln -s qemu-user$$x.1 \
		    debian/qemu-user$$x/usr/share/man/man1/qemu-$$t$$x.1 ;\
	    done ;\
	done

	# binfmt support
	for x in postinst prerm; do \
	    sed 's/@BINFMT_TARGETS@/${all_binfmt_targets}/' \
		debian/qemu-user-static.$$x-in > debian/qemu-user-static.$$x.debhelper ; \
	done

	mkdir -p debian/qemu-user-static/usr/share/binfmts
	install -m 644 -t debian/qemu-user-static/usr/share/binfmts/ \
		$(addprefix debian/binfmts/qemu-,${binfmt_targets})
endif

	dh_install --list-missing
	dh_installdocs
	dh_installchangelogs Changelog
	dh_installudev
	dh_link
	dh_strip
	dh_compress
	dh_fixperms
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary-indep: install
binary-arch: install
binary: install

.PHONY: build clean binary-indep binary-arch binary install

